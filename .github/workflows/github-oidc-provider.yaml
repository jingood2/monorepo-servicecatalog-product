name: github-oidc-provider

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - 'develop'
      - 'feat**'
    paths:
      - "projects/github-oidc-provider/**"
      - "./github/workflows/github-oidc-provider.yaml"

env:
  CI: "true"
  CDK_DEFAULT_ACCOUNT: '037729278610'
  CDK_DEFAULT_REGION: ap-northeast-2
  PROJECT_NAME: github-oidc-provider
  EXECUTE_ROLE: github-deploy-role

jobs:
  build_and_deploy:
    if: startsWith(github.ref , 'ref/heads/main') != true
    runs-on: ubuntu-latest
     # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read
    env:
      STAGE: dev
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          #working-directory: projects/${{inputs.app_name}}
          path: projects/${{env.PROJECT_NAME}}/node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: bahmutov/npm-install@v1
        with:
          working-directory: projects/${{env.PROJECT_NAME}}

      - name: assume role
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume:  arn:aws:iam::${{env.CDK_DEFAULT_ACCOUNT}}:role/${{env.EXECUTE_ROLE}}
          role-session-name: github-session
          aws-region: ap-northeast-2

      #- name: cdk diff
      #  run: npm run diff
      #  working-directory: projects/${{inputs.app_name}}

      - name: cdk build 
        run: npm run synth
        working-directory: projects/${{env.PROJECT_NAME}}

      - name: cdk deploy
        run: yarn cdk deploy --all --require-approval never 
        working-directory: projects/${{env.PROJECT_NAME}}

  deploy_to_stage:
    #if: github.event_name == 'pull_request' && ${{ inputs.stage == 'prod'}}
    #if: github.event_name != 'push'
    if: startsWith(github.ref , 'ref/heads/main')
    runs-on: ubuntu-latest
     # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read
    env:
      STAGE: stage
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: projects/${{env.PROJECT_NAME}}

      - name: assume role
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume:  arn:aws:iam::${{env.CDK_DEFAULT_ACCOUNT}}:role/${{env.EXECUTE_ROLE}}
          role-session-name: github-session
          aws-region: ap-northeast-2

      - name: cdk build 
        run: npm run synth
        working-directory: projects/${{env.PROJECT_NAME}}
      
      - name: deploy cdk on stage
        run: yarn cdk deploy --all --require-approval never 
        working-directory: projects/${{env.PROJECT_NAME}}

  deploy_to_prod:
    #if: github.event_name == 'pull_request' && ${{ inputs.stage == 'prod'}}
    #if: github.event_name != 'push'
    if: startsWith(github.ref , 'ref/heads/main')
    needs: deploy_to_stage
    runs-on: ubuntu-latest
     # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read
    env:
      STAGE: prod 
    steps:
      #- name: approval
      #  uses: trstringer/manual-approval@v1
      #  with:
      #    secret: ${{ github.TOKEN }}
      #    approvers: jingood2
      #    minimum-approvals: 1
      #    issue-title: "Deploying v1.3.5 to prod from staging"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: projects/${{env.PROJECT_NAME}}

      - name: assume role
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume:  arn:aws:iam::${{env.CDK_DEFAULT_ACCOUNT}}:role/${{env.EXECUTE_ROLE}}
          role-session-name: github-session
          aws-region: ap-northeast-2

      - name: cdk build 
        run: npm run synth
        working-directory: projects/${{env.PROJECT_NAME}}
      
      - name: deploy cdk on prod
        run: yarn cdk deploy --all --require-approval never 
        working-directory: projects/${{env.PROJECT_NAME}}
