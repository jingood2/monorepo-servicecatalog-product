{
    "Parameters": {
     "cidrBlock": {
      "Type": "String",
      "Default": "10.0.0.0/18",
      "AllowedPattern": "^(?:[0-9]{1,3}.){3}[0-9]{1,3}[/]([0-9]?[0-6]?|[1][7-9])$",
      "Description": "CIDR Block for VPC. Must be /26 or larger CIDR block."
     },
     "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
     }
    },
    "Mappings": {
     "SolutionMapping": {
      "Version": {
       "Latest": "latest"
      },
      "Route": {
       "QuadZero": "0.0.0.0/0"
      }
     }
    },
    "Resources": {
     "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
       "CidrBlock": {
        "Ref": "cidrBlock"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-VPC"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/VPC"
      }
     },
     "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "AvailabilityZone": {
        "Fn::Select": [
         "2",
         {
          "Fn::GetAZs": ""
         }
        ]
       },
       "CidrBlock": {
        "Fn::Select": [
         0,
         {
          "Fn::Cidr": [
           {
            "Fn::GetAtt": [
             "VPC",
             "CidrBlock"
            ]
           },
           4,
           "4"
          ]
         }
        ]
       },
       "MapPublicIpOnLaunch": true,
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-PublicSubnet2"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PublicSubnet1"
      }
     },
     "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "CidrBlock": {
        "Fn::Select": [
         1,
         {
          "Fn::Cidr": [
           {
            "Fn::GetAtt": [
             "VPC",
             "CidrBlock"
            ]
           },
           4,
           "4"
          ]
         }
        ]
       },
       "MapPublicIpOnLaunch": true
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PublicSubnet2"
      }
     },
     "PubSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-PubSubnetRouteTable"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PubSubnetRouteTable"
      }
     },
     "MyCfnInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-igw"
           ]
          ]
         }
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/MyCfnInternetGateway"
      }
     },
     "PubSubnetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
       "RouteTableId": {
        "Ref": "PubSubnetRouteTable"
       },
       "DestinationCidrBlock": {
        "Fn::FindInMap": [
         "SolutionMapping",
         "Route",
         "QuadZero"
        ]
       },
       "GatewayId": {
        "Ref": "MyCfnInternetGateway"
       }
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PubSubnetRoute"
      }
     },
     "PubSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
       "RouteTableId": {
        "Ref": "PubSubnetRouteTable"
       },
       "SubnetId": {
        "Ref": "PublicSubnet1"
       }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PubSubnet1RouteTableAssociation"
      }
     },
     "PubSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
       "RouteTableId": {
        "Ref": "PubSubnetRouteTable"
       },
       "SubnetId": {
        "Ref": "PublicSubnet2"
       }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PubSubnet2RouteTableAssociation"
      }
     },
     "NAT1EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
       "Domain": "vpc",
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-eip-01"
           ]
          ]
         }
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/NAT1EIP"
      }
     },
     "NAT1Gateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
       "SubnetId": {
        "Ref": "PublicSubnet1"
       },
       "AllocationId": {
        "Fn::GetAtt": [
         "NAT1EIP",
         "AllocationId"
        ]
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-ngw-01"
           ]
          ]
         }
        }
       ]
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/NAT1Gateway"
      }
     },
     "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "AvailabilityZone": {
        "Fn::Select": [
         "0",
         {
          "Fn::GetAZs": ""
         }
        ]
       },
       "CidrBlock": {
        "Fn::Select": [
         2,
         {
          "Fn::Cidr": [
           {
            "Fn::GetAtt": [
             "VPC",
             "CidrBlock"
            ]
           },
           4,
           "4"
          ]
         }
        ]
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-PrivateSubnet1"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PrivateSubnet1"
      }
     },
     "PrivateSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-fw-subnet1-rt"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PrivateSubnet1RouteTable"
      }
     },
     "PrivateSubnet1RouteNGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
       "RouteTableId": {
        "Ref": "PrivateSubnet1RouteTable"
       },
       "DestinationCidrBlock": {
        "Fn::FindInMap": [
         "SolutionMapping",
         "Route",
         "QuadZero"
        ]
       },
       "NatGatewayId": {
        "Ref": "NAT1Gateway"
       }
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PrivateSubnet1RouteNGW"
      }
     },
     "privateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
       "RouteTableId": {
        "Ref": "PrivateSubnet1RouteTable"
       },
       "SubnetId": {
        "Ref": "PrivateSubnet1"
       }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/privateSubnet1RouteTableAssociation"
      }
     },
     "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "AvailabilityZone": {
        "Fn::Select": [
         "2",
         {
          "Fn::GetAZs": ""
         }
        ]
       },
       "CidrBlock": {
        "Fn::Select": [
         3,
         {
          "Fn::Cidr": [
           {
            "Fn::GetAtt": [
             "VPC",
             "CidrBlock"
            ]
           },
           4,
           "4"
          ]
         }
        ]
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-PrivateSubnet2"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PrivateSubnet2"
      }
     },
     "PrivateSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
       "VpcId": {
        "Ref": "VPC"
       },
       "Tags": [
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-fw-subnet2-rt"
           ]
          ]
         }
        }
       ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PrivateSubnet2RouteTable"
      }
     },
     "PrivateSubnet2RouteNGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
       "RouteTableId": {
        "Ref": "PrivateSubnet2RouteTable"
       },
       "DestinationCidrBlock": {
        "Fn::FindInMap": [
         "SolutionMapping",
         "Route",
         "QuadZero"
        ]
       },
       "NatGatewayId": {
        "Ref": "NAT1Gateway"
       }
      },
      "Metadata": {
       "aws:cdk:path": "vpc-dev/PrivateSubnet2RouteNGW"
      }
     },
     "privateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
       "RouteTableId": {
        "Ref": "PrivateSubnet2RouteTable"
       },
       "SubnetId": {
        "Ref": "PrivateSubnet2"
       }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
       "aws:cdk:path": "vpc-dev/privateSubnet2RouteTableAssociation"
      }
     }
    },
    "Rules": {
     "CheckBootstrapVersion": {
      "Assertions": [
       {
        "Assert": {
         "Fn::Not": [
          {
           "Fn::Contains": [
            [
             "1",
             "2",
             "3",
             "4",
             "5"
            ],
            {
             "Ref": "BootstrapVersion"
            }
           ]
          }
         ]
        },
        "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
       }
      ]
     }
    }
   }