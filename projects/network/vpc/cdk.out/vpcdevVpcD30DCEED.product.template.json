{
  "Parameters": {
    "ProjectName": {
      "Type": "String",
      "Default": "acme",
      "Description": "Project Name"
    },
    "EnvironmentType": {
      "Type": "String",
      "Default": "dev",
      "AllowedValues": [
        "dev",
        "stage",
        "prod",
        "shared"
      ],
      "Description": "Environment Type"
    },
    "CidrBlock": {
      "Type": "String",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "^(?:[0-9]{1,3}.){3}[0-9]{1,3}[/]([0-9]?[0-6]?|[1][7-9])$",
      "Description": "CIDR Block for VPC. Must be /26 or larger CIDR block."
    },
    "CreateSingleNAT": {
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Single NAT Gateway in 1st public subnet or NAT Gateway in each public subnet"
    }
  },
  "Conditions": {
    "CreateSingleNatCondition": {
      "Fn::Equals": [
        {
          "Ref": "CreateSingleNAT"
        },
        "true"
      ]
    },
    "CreateTwoNatCondition": {
      "Fn::Equals": [
        {
          "Ref": "CreateSingleNAT"
        },
        "false"
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Mappings": {
    "SolutionMapping": {
      "Version": {
        "Latest": "latest"
      },
      "Route": {
        "QuadZero": "0.0.0.0/0"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ProjectName"
                  },
                  "-",
                  {
                    "Ref": "EnvironmentType"
                  },
                  "-vpc"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/VPC"
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Select": [
            0,
            {
              "Fn::Cidr": [
                {
                  "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                  ]
                },
                4,
                "4"
              ]
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-PublicSubnet2"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PublicSubnet1"
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::Select": [
            1,
            {
              "Fn::Cidr": [
                {
                  "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                  ]
                },
                4,
                "4"
              ]
            }
          ]
        },
        "MapPublicIpOnLaunch": true
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PublicSubnet2"
      }
    },
    "PubSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-PubSubnetRouteTable"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PubSubnetRouteTable"
      }
    },
    "MyCfnInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-igw"
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/MyCfnInternetGateway"
      }
    },
    "PubSubnetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PubSubnetRouteTable"
        },
        "DestinationCidrBlock": {
          "Fn::FindInMap": [
            "SolutionMapping",
            "Route",
            "QuadZero"
          ]
        },
        "GatewayId": {
          "Ref": "MyCfnInternetGateway"
        }
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PubSubnetRoute"
      }
    },
    "PubSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PubSubnetRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PubSubnet1RouteTableAssociation"
      }
    },
    "PubSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PubSubnetRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PubSubnet2RouteTableAssociation"
      }
    },
    "NAT1EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-eip-01"
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/NAT1EIP"
      }
    },
    "NAT1Gateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            {
              "Ref": "NAT1EIP"
            },
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-ngw-01"
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/NAT1Gateway"
      }
    },
    "NAT2EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-eip-02"
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/NAT2EIP"
      },
      "Condition": "CreateTwoNatCondition"
    },
    "NAT2Gateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            {
              "Ref": "NAT2EIP"
            },
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-ngw-02"
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/NAT2Gateway"
      },
      "Condition": "CreateTwoNatCondition"
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Select": [
            2,
            {
              "Fn::Cidr": [
                {
                  "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                  ]
                },
                4,
                "4"
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-PrivateSubnet1"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet1"
      }
    },
    "PrivateSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-fw-subnet1-rt"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet1RouteTable"
      }
    },
    "PrivateSubnet1RouteNGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet1RouteTable"
        },
        "DestinationCidrBlock": {
          "Fn::FindInMap": [
            "SolutionMapping",
            "Route",
            "QuadZero"
          ]
        },
        "NatGatewayId": {
          "Ref": "NAT1Gateway"
        }
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet1RouteNGW"
      }
    },
    "privateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/privateSubnet1RouteTableAssociation"
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Select": [
            3,
            {
              "Fn::Cidr": [
                {
                  "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                  ]
                },
                4,
                "4"
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-PrivateSubnet2"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet2"
      }
    },
    "PrivateSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-fw-subnet2-rt"
                ]
              ]
            }
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet2RouteTable"
      }
    },
    "PrivateSubnet2RouteNGWTwo": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet2RouteTable"
        },
        "DestinationCidrBlock": {
          "Fn::FindInMap": [
            "SolutionMapping",
            "Route",
            "QuadZero"
          ]
        },
        "NatGatewayId": {
          "Ref": "NAT2Gateway"
        }
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet2RouteNGWTwo"
      },
      "Condition": "CreateTwoNatCondition"
    },
    "PrivateSubnet2RouteNGWOne": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet2RouteTable"
        },
        "DestinationCidrBlock": {
          "Fn::FindInMap": [
            "SolutionMapping",
            "Route",
            "QuadZero"
          ]
        },
        "NatGatewayId": {
          "Ref": "NAT1Gateway"
        }
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/PrivateSubnet2RouteNGWOne"
      },
      "Condition": "CreateSingleNatCondition"
    },
    "privateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/privateSubnet2RouteTableAssociation"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/0WNQQuCQBCFf4t3nbIguoZEdCgko2uM6xRjthu7s0aI/z23KE9vPt5782YwX0Ia4dMlqrolDZfQDXDuHNmWFSkUbMwVcmsqr6QQVLeY1Ay67KJPeRYPUvhSk4TrYLzQEcuGAm21kB2cDQo98fUPjJ0xv3LOKEZho4O93uZB9vgr933gHC3eafgaIDO64l9hh48H6+tng5zxVlEfa1MR1G7SpgtIU5hGtWNOrNfCd4LDV98G0xBUAgEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "vpc-dev/Vpc/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  }
}