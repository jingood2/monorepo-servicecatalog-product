Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Git Repository Common Information
        Parameters:
          - SourceProviderType
          - RepoName
          - RepoBranch
      - Label:
          default: Configuration for Codebuild
        Parameters:
          - ServiceName
          - sourceArtifact
          - ecsCluster
          - vpcId
          - albArn
Parameters:
  ProjectName:
    Type: String
    Default: acme
    Description: The name of the Project Name
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dmz
      - dev
      - shared
      - prod
    Description: The name of the Environment
  RepoName:
    Type: String
    Description: Git Repository or S3 Bucket Name
  RepoBranch:
    Type: String
    Default: main
  ServiceName:
    Type: String
    Default: demoapp
    Description: Service Name
  ContainerPort:
    Type: Number
    Default: "80"
    Description: Container Port
  S3BucketSourceArtifacts:
    Type: String
    Default: acme-servicecatalog-cicd-bucket
    Description: S3 Bucket Name for Source and Build Artifact
  PackagingType:
    Type: String
    Default: DOCKER
    AllowedValues:
      - MAVEN
      - GRADLE
      - NPM
      - PYTHON
      - DOCKER
    Description: Source Packaging Tool
  EnvType:
    Type: String
    Default: beanstalk
    AllowedValues:
      - ecs
      - eks
      - beanstalk
      - lambda
    Description: Source Packaging Tool
Resources:
  GitRepositoryimageciCICodeCommitProductCodeCommitPipelineF01C66370EventRule3505BD3A:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        resources:
          - Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codecommit:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: RepoName
        detail-type:
          - CodeCommit Repository State Change
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - Ref: RepoBranch
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: CodeCommitPipeline2208527B
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - CodeCommitPipelineEventsRole4B95064C
              - Arn
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/GitRepository/imageciCICodeCommitProductCodeCommitPipelineF01C66370EventRule/Resource
  ECRRepositoryName60F06CDD:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName:
        Ref: ServiceName
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/ECRRepositoryName/Resource
  BuildProjectRoleAA92C755:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/BuildProject/Role/Resource
  BuildProjectRoleDefaultPolicy3E9F248C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: BuildProject097C5DB7
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: BuildProject097C5DB7
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: BuildProject097C5DB7
                  - -*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRRepositoryName60F06CDD
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRRepositoryName60F06CDD
                - Arn
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
                    - /*
        Version: 2012-10-17
      PolicyName: BuildProjectRoleDefaultPolicy3E9F248C
      Roles:
        - Ref: BuildProjectRoleAA92C755
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/BuildProject/Role/DefaultPolicy/Resource
  BuildProject097C5DB7:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: "#{SOURCE_CODECOMMIT_NS.CommitId}"
          - Name: REPOSITORY_URI
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - Fn::Select:
                      - 4
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - ECRRepositoryName60F06CDD
                              - Arn
                  - .dkr.ecr.
                  - Fn::Select:
                      - 3
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - ECRRepositoryName60F06CDD
                              - Arn
                  - .
                  - Ref: AWS::URLSuffix
                  - /
                  - Ref: ECRRepositoryName60F06CDD
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value:
              Ref: AWS::Region
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value:
              Ref: AWS::AccountId
          - Name: CONTAINER_PORT
            Type: PLAINTEXT
            Value:
              Ref: ContainerPort
          - Name: BUILD_TYPE
            Type: PLAINTEXT
            Value:
              Ref: PackagingType
          - Name: TARGET_TYPE
            Type: PLAINTEXT
            Value:
              Ref: EnvType
          - Name: SERVICE_NAME
            Type: PLAINTEXT
            Value:
              Ref: ServiceName
          - Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value:
              Ref: S3BucketSourceArtifacts
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - BuildProjectRoleAA92C755
          - Arn
      Source:
        BuildSpec: >-
          {
            "version": 0.2,
            "env": {
              "exported-variables": [
                "IMAGE_TAG"
              ]
            },
            "phases": {
              "pre_build": {
                "commands": [
                  "echo Logging in to Amazon ECR...",
                  "echo $AWS_DEFAULT_REGION",
                  "echo $CODEBUILD_RESOLVED_SOURCE_VERSION",
                  "echo $CODEBUILD_SOURCE_VERSION",
                  "echo $AWS_ACCOUNT_ID",
                  "echo $SERVICE_NAME",
                  "echo $CONTAINER_PORT",
                  "echo $ARTIFACT_BUCKET",
                  "echo $BUILD_TYPE",
                  "echo $TARGET_TYPE",
                  "aws --version",
                  "COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)",
                  "IMAGE_TAG=${COMMIT_HASH:=latest}",
                  "export MAVEN_OPTS=\"-Xmx1024m -XX:MaxPermSize=512m\"",
                  "if [ \"$BUILD_TYPE\" = \"DOCKER\" ]; then\n  aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query Account --output text).dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\nfi\n"
                ]
              },
              "build": {
                "commands": [
                  "echo Build started on `date`",
                  "echo $BUILD_TYPE",
                  "if [ \"$BUILD_TYPE\" = \"GRADLE\" ]; then \n  java --version ;\n  chmod +x gradlew ;\n  ./gradlew clean build ;\nfi\n",
                  "if [ \"$BUILD_TYPE\" = \"MAVEN\" ]; then \n  which mvn;\n  chmod +x mvnw ;\n  ./mvnw package;\nfi\n",
                  "if [ \"$BUILD_TYPE\" = \"NPM\" ]; then \n  echo Installing source NPM dependencies...;\n  npm install -y -g --unsafe-perm ;\nfi\n",
                  "if [ \"$BUILD_TYPE\" = \"DOCKER\" ]; then \n  echo Building the Docker image...\n  docker build -t $REPOSITORY_URI:latest .\n\n  echo Tagging Docker image...\n  docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n\n  echo Pushing the Docker images...\n  docker push $REPOSITORY_URI:latest\n  docker push $REPOSITORY_URI:$IMAGE_TAG\nfi\n"
                ]
              },
              "post_build": {
                "commands": [
                  "echo Build completed on `date`",
                  "echo $BUILD_TYPE",
                  "if [ \"$BUILD_TYPE\" = \"GRADLE\" ]; then \n  mv build/libs/*.jar app.jar\n  mv .ebextentions .ebextentions\n  echo Writing Procfile for Beanstlak...\n  zip -r $IMAGE_TAG.zip app.jar .ebextentions\n  aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/$IMAGE_TAG.zip\n  aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/latest.zip\nfi\n",
                  "if [ \"$BUILD_TYPE\" = \"MAVEN\" ]; then \n  mv target/*.jar app.jar\n  mv .ebextentions .ebextentions\n  echo Writing Procfile for Beanstlak...\n  zip -r $IMAGE_TAG.zip app.jar .ebextentions\n  aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/$IMAGE_TAG.zip\n  aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/latest.zip\nfi\n",
                  "if [ \"$BUILD_TYPE\" = \"DOCKER\" ]; then \n  if [ \"$TARGET_TYPE\" = \"ecs\" ]; then \n    echo Writing image definitions file for ECS...\n    printf '[{\"name\": \"%s\", \"imageUri\":\"%s\"}]' $SERVICE_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json\n    zip -r $IMAGE_TAG.zip imagedefinitions.json\n    aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/$IMAGE_TAG.zip\n    aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/latest.zip\n  fi \n\n  if [ \"$TARGET_TYPE\" = \"beanstalk\" ]; then \n    echo Writing Dockerrun.aws.json file for Beanstalk ...\n    printf '{ \"AWSEBDockerrunVersion\":\"1\",\"Image\": {\"Name\": \"%s\"}, \"Ports\":[{\"ContainerPort\": \"%s\"}] }' $REPOSITORY_URI:$IMAGE_TAG $CONTAINER_PORT > Dockerrun.aws.json\n    zip -r $IMAGE_TAG.zip Dockerrun.aws.json\n    aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/$IMAGE_TAG.zip\n    aws s3 cp ./$IMAGE_TAG.zip s3://$ARTIFACT_BUCKET/$SERVICE_NAME/latest.zip\n  fi \n\n  if [ \"$TARGET_TYPE\" = \"EKS\" ]; then \n    echo Writing image definitions file for EKS...\n  fi \n\n  if [ \"$TARGET_TYPE\" = \"LAMBDA\" ]; then \n    echo Writing image definitions file for LAMBDA...\n  fi \nfi\n"
                ]
              }
            },
            "artifacts": {
              "files": [
                "**/*"
              ],
              "name": "$IMAGE_TAG"
            }
          }
        Type: CODEPIPELINE
      Cache:
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL
      EncryptionKey: alias/aws/s3
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/BuildProject/Resource
  CodeCommitPipelineRole030CEFF9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/Role/Resource
  CodeCommitPipelineRoleDefaultPolicy9DE81801:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
                    - /*
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeCommitPipelineSOURCECODECOMMITCodePipelineActionRole9EE0CF40
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeCommitPipelineBUILDBuildCodePipelineActionRole4F58172A
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeCommitPipelineApprovalCodePipelineActionRoleE14B236D
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeCommitPipelineDEPLOYDeployCodePipelineActionRole868CD33F
                - Arn
        Version: 2012-10-17
      PolicyName: CodeCommitPipelineRoleDefaultPolicy9DE81801
      Roles:
        - Ref: CodeCommitPipelineRole030CEFF9
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/Role/DefaultPolicy/Resource
  CodeCommitPipeline2208527B:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - CodeCommitPipelineRole030CEFF9
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName:
                  Ref: RepoName
                BranchName:
                  Ref: RepoBranch
                PollForSourceChanges: false
              Name: CODECOMMIT
              Namespace: SOURCE_CODECOMMIT_NS
              OutputArtifacts:
                - Name: Source
              RoleArn:
                Fn::GetAtt:
                  - CodeCommitPipelineSOURCECODECOMMITCodePipelineActionRole9EE0CF40
                  - Arn
              RunOrder: 1
          Name: SOURCE
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: BuildProject097C5DB7
              InputArtifacts:
                - Name: Source
              Name: Build
              Namespace: BUILD_Build_NS
              OutputArtifacts:
                - Name: Build
              RoleArn:
                Fn::GetAtt:
                  - CodeCommitPipelineBUILDBuildCodePipelineActionRole4F58172A
                  - Arn
              RunOrder: 1
          Name: BUILD
        - Actions:
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Name: Approval
              RoleArn:
                Fn::GetAtt:
                  - CodeCommitPipelineApprovalCodePipelineActionRoleE14B236D
                  - Arn
              RunOrder: 1
          Name: Approval
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CodeBuildDeployPlojectF23FECA7
                EnvironmentVariables: '[{"name":"IMAGE_TAG","type":"PLAINTEXT","value":"#{BUILD_Build_NS.IMAGE_TAG}"}]'
              InputArtifacts:
                - Name: Build
              Name: Deploy
              RoleArn:
                Fn::GetAtt:
                  - CodeCommitPipelineDEPLOYDeployCodePipelineActionRole868CD33F
                  - Arn
              RunOrder: 1
          Name: DEPLOY
      ArtifactStore:
        Location:
          Ref: S3BucketSourceArtifacts
        Type: S3
      Name:
        Ref: ServiceName
    DependsOn:
      - CodeCommitPipelineRoleDefaultPolicy9DE81801
      - CodeCommitPipelineRole030CEFF9
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/Resource
  CodeCommitPipelineSOURCECODECOMMITCodePipelineActionRole9EE0CF40:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/SOURCE/CODECOMMIT/CodePipelineActionRole/Resource
  CodeCommitPipelineSOURCECODECOMMITCodePipelineActionRoleDefaultPolicy5A06A722:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
                    - /*
          - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codecommit:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: RepoName
        Version: 2012-10-17
      PolicyName: CodeCommitPipelineSOURCECODECOMMITCodePipelineActionRoleDefaultPolicy5A06A722
      Roles:
        - Ref: CodeCommitPipelineSOURCECODECOMMITCodePipelineActionRole9EE0CF40
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/SOURCE/CODECOMMIT/CodePipelineActionRole/DefaultPolicy/Resource
  CodeCommitPipelineEventsRole4B95064C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/EventsRole/Resource
  CodeCommitPipelineEventsRoleDefaultPolicyE6B9309F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CodeCommitPipeline2208527B
        Version: 2012-10-17
      PolicyName: CodeCommitPipelineEventsRoleDefaultPolicyE6B9309F
      Roles:
        - Ref: CodeCommitPipelineEventsRole4B95064C
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/EventsRole/DefaultPolicy/Resource
  CodeCommitPipelineBUILDBuildCodePipelineActionRole4F58172A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/BUILD/Build/CodePipelineActionRole/Resource
  CodeCommitPipelineBUILDBuildCodePipelineActionRoleDefaultPolicy2C5F0C6B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BuildProject097C5DB7
                - Arn
        Version: 2012-10-17
      PolicyName: CodeCommitPipelineBUILDBuildCodePipelineActionRoleDefaultPolicy2C5F0C6B
      Roles:
        - Ref: CodeCommitPipelineBUILDBuildCodePipelineActionRole4F58172A
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/BUILD/Build/CodePipelineActionRole/DefaultPolicy/Resource
  CodeCommitPipelineApprovalCodePipelineActionRoleE14B236D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/Approval/Approval/CodePipelineActionRole/Resource
  CodeCommitPipelineDEPLOYDeployCodePipelineActionRole868CD33F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/DEPLOY/Deploy/CodePipelineActionRole/Resource
  CodeCommitPipelineDEPLOYDeployCodePipelineActionRoleDefaultPolicy3D91840D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodeBuildDeployPlojectF23FECA7
                - Arn
        Version: 2012-10-17
      PolicyName: CodeCommitPipelineDEPLOYDeployCodePipelineActionRoleDefaultPolicy3D91840D
      Roles:
        - Ref: CodeCommitPipelineDEPLOYDeployCodePipelineActionRole868CD33F
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeCommitPipeline/DEPLOY/Deploy/CodePipelineActionRole/DefaultPolicy/Resource
  CodeBuildDeployPlojectRoleF0DE6E1C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: 2012-10-17
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeBuildDeployPloject/Role/Resource
  CodeBuildDeployPlojectRoleDefaultPolicy56D21E97:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodeBuildDeployPlojectF23FECA7
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodeBuildDeployPlojectF23FECA7
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CodeBuildDeployPlojectF23FECA7
                  - -*
          - Action:
              - elasticbeanstalk:*
              - autoscaling:*
              - elasticloadbalancing:*
              - ecs:*
              - s3:*
              - ec2:*
              - cloudwatch:*
              - logs:*
              - cloudformation:*
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: S3BucketSourceArtifacts
                    - /*
        Version: 2012-10-17
      PolicyName: CodeBuildDeployPlojectRoleDefaultPolicy56D21E97
      Roles:
        - Ref: CodeBuildDeployPlojectRoleF0DE6E1C
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeBuildDeployPloject/Role/DefaultPolicy/Resource
  CodeBuildDeployPlojectF23FECA7:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: SERVICE_NAME
            Type: PLAINTEXT
            Value:
              Ref: ServiceName
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value:
              Ref: Environment
          - Name: DEPLOY_ENV_NAME
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ""
                - - Ref: ProjectName
                  - "-"
                  - Ref: EnvType
                  - "-"
                  - Ref: Environment
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value:
              Ref: AWS::Region
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value:
              Ref: AWS::AccountId
          - Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value:
              Ref: S3BucketSourceArtifacts
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: "#{Namespace.IMAGE_TAG}"
          - Name: TARGET_TYPE
            Type: PLAINTEXT
            Value:
              Ref: EnvType
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CodeBuildDeployPlojectRoleF0DE6E1C
          - Arn
      Source:
        BuildSpec: >-
          {
            "version": 0.2,
            "phases": {
              "pre_build": {
                "commands": [
                  "echo deploy envorinment variables",
                  "echo $AWS_DEFAULT_REGION",
                  "echo $CODEBUILD_RESOLVED_SOURCE_VERSION",
                  "echo $SERVICE_NAME",
                  "echo $ENVIRONMENT",
                  "echo $CODEBUILD_BUILD_NUMBER",
                  "echo $AWS_ACCOUNT_ID",
                  "echo $REPOSITORY_URI",
                  "echo $TARGET_TYPE",
                  "echo $ARTIFACT_BUCKET",
                  "echo $IMAGE_TAG",
                  "aws --version",
                  "if [ \"TARGET_TYPE\" = \"EKS\"]; then\n  curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl\n  chmod +x ./kubectl\n  mv ./kubectl /usr/local/bin/kubectl\n  mkdir ~/.kube\n  aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name ${DEPLOY_ENV_NAME}\n  kubectl get po -n kube-system\nfi\n"
                ]
              },
              "build": {
                "commands": [
                  "echo Skip Build on `date`"
                ]
              },
              "post_build": {
                "commands": [
                  "echo Post Build started on `date`",
                  "echo $TARGET_TYPE",
                  "if [ \"$TARGET_TYPE\" = \"ecs\" ]; then \n  aws ecs update-service --cluster $DEPLOY_ENV_NAME --service \"$SERVICE_NAME-$ENVIRONMENT\" --force-new-deployment --region $AWS_DEFAULT_REGION\nfi \n",
                  "if [ \"$TARGET_TYPE\" = \"beanstalk\" ]; then \n  aws elasticbeanstalk create-application-version --application-name $SERVICE_NAME --version-label v$CODEBUILD_BUILD_NUMBER --source-bundle S3Bucket=\"$ARTIFACT_BUCKET\",S3Key=\"$SERVICE_NAME/$IMAGE_TAG.zip\" \n  aws elasticbeanstalk update-environment --application-name $SERVICE_NAME --environment-name \"$DEPLOY_ENV_NAME-$SERVICE_NAME\" --version-label=v$CODEBUILD_BUILD_NUMBER\nfi \n",
                  "if [ \"$TARGET_TYPE\" = \"eks\" ]; then \n  sed -i.bak 's#AWS_ECR_URI#'\"$AWS_ECR_URI\"'#' ./EKS/deploy.yaml\n  sed -i.bak 's#DATE_STRING#'\"$DATE\"'#' ./EKS/deploy.yaml\n  kubectl apply -f ./EKS/deploy.yaml\n  kubectl apply -f ./EKS/svc.yaml\nfi \n",
                  "if [ \"$TARGET_TYPE\" = \"lambda\" ]; then \n  echo Nothing to do on LAMBDA \nfi \n"
                ]
              }
            }
          }
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CodeBuildDeployPloject/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QUU7EMAxEz8J/aiggDrB7gap7AJR1DXKbxlXiFKEqdydNK+BrZuzRs+RneG3h6cF+xQaHqXF8h62E9y1SWBkJrVonn9AFGRLqTS1OhlbyGmHrkyNz/fC7ZkMYyogWiawSvuviN2WDMtA9sRtg63ghx54KdCTUvXnabNjOhSIneNdOHGPFHS6b+AKXhBPpxUaq4OUk/rFr//Q512SDnUkpmJ6ipIDHiX/+Kn5gZfHZ+AKFMT6u7Ru0+4fGyNyE5JVngv7QH3XdojU9AQAA
    Metadata:
      aws:cdk:path: image-ci/CICodeCommitProduct/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
