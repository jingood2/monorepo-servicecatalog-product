version: 0.2

env:
  exported-variables:
    - IMAGE_TAG
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $AWS_DEFAULT_REGION
      - echo $PROJECT_NAME
      - echo $ENVIRONMENT
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo $CODEBUILD_SOURCE_VERSION
      - echo $AWS_ACCOUNT_ID
      - echo $SERVICE_NAME
      - echo $ARTIFACT_BUCKET
      - echo $BUILD_TYPE
      - echo $TARGET_TYPE
      - aws --version
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - export MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=512m"
      - |
        if [ "$TARGET_TYPE" = "eks" ]; then
          curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
          curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
          echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc

          # switch cluster context
          mkdir -p ~/.kube
          aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $PROJECT_NAME-eks-$ENVIRONMENT

          # install argocd cli
          curl --silent --location -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.4.7/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

          # login argo-server
          kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
          export ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`
          #export ARGO_PWD=`kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d`
          export ARGO_PWD='Woalsfldk!0212'
          argocd login $ARGOCD_SERVER --username admin --password $ARGO_PWD --insecure
        fi
  build:
    commands:
      - echo Build started on `date`
  post_build:
    commands:
      - echo Build completed on `date`
      - echo $BUILD_TYPE
      - |
        if [ "$BUILD_TYPE" = "DOCKER" ]; then 
          if [ "$TARGET_TYPE" = "eks" ]; then 
            CONTEXT_NAME=`kubectl config view -o jsonpath='{.current-context}'`
            argocd cluster add $CONTEXT_NAME

            # create argocd project
            kubectl create namespace $PROJECT_NAME-$ENVIRONMENT
            argocd proj create $PROJECT_NAME -d https://kubernetes.default.svc,$PROJECT_NAME-$ENVIRONMENT -s https://github.com/$REPO_OWNER/$REPO_NAME.git --upsert
            argocd app create $SERVICE_NAME --repo https://github.com/$REPO_OWNER/$REPO_NAME.git --path ./dist/$ENVIRONMENT --dest-server https://kubernetes.default.svc --dest-namespace $PROJECT_NAME-$ENVIRONMENT

            if [ "$ENABLE_AUTOSYNC" = 'true' ]; then
              argocd app sync $SERVICE_NAME
            fi
          fi 

          if [ "$TARGET_TYPE" = "lambda" ]; then 
            echo Writing image definitions file for LAMBDA...
          fi 
        fi